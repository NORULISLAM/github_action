name: Ready to Deploy

on:
  push:
    branches:
      - main
      - "feature/**"

      # Uncomment the following lines if you want to trigger the workflow manually
      #when you want to run the workflow manually
      # push:
      # workflow_dispatch:
      #if I want to run this all branches which name starts with "feature/"
      #- "feature/**"
      #feature/v4
      #feature/2.0/v4

jobs:
  test-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Run the tests
        run: |
          npm install
          npm run test
      - name: Install dependencies
        run: |
          npm install --frozen-lockfile

  build-code:
    runs-on: ubuntu-latest
    needs: test-code
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Run the tests
        run: |
          npm install
          npm run test
      - name: Build the app
        run: |
          npm run build

  deploy-code:
    runs-on: ubuntu-latest
    needs: build-code
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Deploy the code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Build the app
        run: |
          npm run build

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PATH: ${{ secrets.SSH_PATH }}
        run: |
          rsync -avz --delete --exclude='.git' --exclude='node_modules' ./dist/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_PATH }}
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.SSH_PATH }} && npm install --frozen-lockfile && pm2 restart all"
